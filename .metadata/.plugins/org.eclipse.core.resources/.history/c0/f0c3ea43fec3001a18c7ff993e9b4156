/*
============================================================================
Name : main.c
Author : hoang do (040961749)
Version : Lab 4
Description : structs in C, Ansi-style
Status :
Builds clean; no warning(s) : << true xor false >>
Requirement #1 - struct Student : << complete xor not complete >>
Requirement #2 - struct Course : << complete xor not complete >>
Requirement #3 - typedef Course struct : << complete xor not complete >>
Requirement #4 - Prompt for number of students : << complete xor not complete >>
Requirement #5 - Prompt for student information: << complete xor not complete >>
Requirement #6 - Prompt for course information : << complete xor not complete >>
Requirement #7 - Display registration : << complete xor not complete >>
============================================================================
 */

#include <stdlib.h>
#include <stdio.h>
struct Student {
	char firstName[19];
	char lastName[19];
	int studentIds[0];
	struct Course courses[];
} s[10];

struct Course {
	char  title[50];
	char  author[50];
	char  subject[100];
	int   book_id;
} course;

int getStudentId(char *string) {
    int x = 0;
    do{
        printf(string);
        scanf("%d", &x);
        if (x < 10000 || x > 99999) {
        	printf("Invalid student id. Please enter a 5 digit integer\n");
        }
    } while(x < 10000 || x > 99999);
    return x;
}

int main() {
	setvbuf(stdout, NULL, _IONBF, 0);
	setvbuf(stdout, NULL, _IONBF, 0);
	struct Student students;
	// number of students
	printf("How many students would you like to register: ");
	int numberOfStudents;
	scanf("%d", &numberOfStudents);

	// getting initial student ids
	students.studentIds[numberOfStudents];
	for (int i = 0; i < numberOfStudents; i++) {

		char tempStr[75];
		sprintf(tempStr, "Please enter the student ID for student %d: ",(i+1));

		int noDupes = 1;
		while (noDupes) {
			studentIds[i] = getStudentId(tempStr);

			noDupes = 0;
			for(int j = 0; j < i; j++){
				if (studentIds[i] == studentIds[j]){
					noDupes = 1;
					break;
				}
			}

			// error message if it didn't work
			if (noDupes == 1) {
				printf("Error: student ID %d already entered. Try again.\n", studentIds[i]);
			} else {
				break;
			}
		}
	}

	int i;


	printf("Enter information of students:\n");

	// storing information
	for (i = 0; i < 5; ++i) {
		s[i].roll = i + 1;
		printf("\nFor roll number%d,\n", s[i].roll);
		printf("Enter first name: ");
		scanf("%s", s[i].firstName);
		printf("Enter marks: ");
		scanf("%f", &s[i].marks);
	}
	printf("Displaying Information:\n\n");

	// displaying information
	for (i = 0; i < 5; ++i) {
		printf("\nRoll number: %d\n", i + 1);
		printf("First name: ");
		puts(s[i].firstName);
		printf("Marks: %.1f", s[i].marks);
		printf("\n");
	}
	return 0;
}
